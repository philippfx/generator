Creating Pipeline infrastracture

cd C:\VS_2017_Projects\aspnetcore-generator-api

REGISTRY: 
http://localhost:55000/v2/_catalog
http://my-registry:55000/v2/_catalog

docker tag aspnetcore/generator:multi my-registry:55000/aspnetcore/generator:multi (tags image, but is not pushed to registry yet)
docker push my-registry:55000/aspnetcore/generator:multi

http://my-registry:55000/v2/aspnetcore/generator/tags/list

TEAMCITY:

cd C:\VS_2017_Projects\aspnetcore-generator-api\api\infra\teamcity
docker-compose up -d

http://localfittifyapi:8111/

SQL SERVER SETUP:
put mssql-jdbc-6.2.2.jre8.jar into C:\VS_2017_Projects\aspnetcore-generator-api\api\infra\teamcity
docker cp mssql-jdbc-6.2.2.jre8.jar b99c1a82ea54:/data/teamcity_server/datadir/lib/jdbc (copies into container)

be sure to set SQL TCP Port (https://stackoverflow.com/questions/18841744/jdbc-connection-failed-error-tcp-ip-connection-to-host-failed/24299346)
and allow port 1433 in firewall



--- Creating a CI Dockerfile with Unit Test ---
Create Dockerfile in C:\VS_2017_Projects\aspnetcore-generator-api

docker build -t testing .
docker run --rm -it -p 8080:80 testing

Hosting environment: Production
Content root path: /publish
Now listening on: http://[::]:80
Application started. Press Ctrl+C to shut down.

http://localhost:8080/

docker image prune

--- Building Image on every commit ---
docker image ls

docker image ls my-registry:55000/gen

PS C:\VS_2017_Projects\aspnetcore-generator-api> docker image ls my-registry:55000/gen
REPOSITORY              TAG                 IMAGE ID            CREATED              SIZE
my-registry:55000/gen   ci-3                d862869ac1e6        About a minute ago   355MB


--- Using docker-compose for sophisticated integration testing ---

cd C:\VS_2017_Projects\aspnetcore-generator-api
mkdir integration
cd integration
dotnet new xunit
dotnet add package FluentAssertions.Json (BETTER YOU ADD IT VIA VS2017 version 4.19.0)
cp ..\api\docker-compose.yml .

docker-compose up -d

MAILHOG
http://localhost:8080/swagger/
http://localhost:8025/
http://localhost:8025/api/v2/messages

(Create Dockerfile in integration folder)
docker build -t my-registry:55000/gen:integration-6 .
docker run --rm -it my-registry:55000/gen:integration-6

cd C:\VS_2017_Projects\aspnetcore-generator-api\integration
(adjust docker-compose.yml)
docker-compose up
docker-compose up (twice is important, because the mailhog container for manual testing may be still runnning) 

docker-compose up --force-recreate --abort-on-container-exit

powershell window 1: docker-compose -p p1 up --force-recreate
powershell window 2: docker-compose -p p2 up --force-recreate

docker-compose up --force-recreate --abort-on-container-exit --build

--- Orchestrating Integration Testing on Every Commit ---
cd C:\VS_2017_Projects\aspnetcore-generator-api\api\infra\teamcity
docker-compose build
docker-compose up -d

cd  C:\VS_2017_Projects\aspnetcore-generator-api\integration
cat .\docker-compose.yml
docker-compose config

